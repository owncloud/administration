---
- name: update packages cache
  apt: update_cache=yes cache_valid_time=3600

- name: install packages
  apt: name={{ item }}
  with_items:
    - ant
    - curl
    - wget
    - mysql-server
    - postgresql
    - php5
    - php5-curl
    - php5-gd
    - php5-intl
    - php5-json
    - php5-mcrypt
    - php5-sqlite
    - php5-mysqlnd
    - php5-pgsql
    - php5-ldap
    - php5-dev
    - php5-xdebug
    - smbclient
    - python-psycopg2
    - python-mysqldb

- name: install packages for phpenv
  apt: name={{ item }}
  with_items:
     - libxml2-dev
     - re2c
     - libmcrypt-dev
     - libcurl3-openssl-dev
     - bison
     - flex
     - libjpeg-dev
     - libpng-dev
     - libtidy-dev
     - libxslt-dev
     - libreadline-dev
     - libldap2-dev
     - libpq-dev
     - libbz2-dev
     - libicu-dev
     - libircclient-dev
     - libmysqlclient-dev

- name: Create directory for the definitions files.
  file: dest=/tmp/definitions state=directory

- name: Create a custom definition file for the PHP version (with PEAR and PECL).
  template: src=definition.j2 dest=/tmp/definitions/{{ item.version }}
  with_items: '{{php_releases}}'

- name: Build PHP versions.
  shell: >
    {{ phpbuild_path }}/bin/php-build -i {{ item.ini_file|default('development') }} {{ item.version }} {{ phpenv_versions_path }}/{{ item.version }};
    chdir=/tmp/definitions
    creates={{ phpenv_versions_path }}/{{ item.version }}/etc/php.ini
  with_items: '{{php_releases}}'

- name: Adjust php memory limit
  shell: echo "memory_limit = -1" >> "{{ phpenv_versions_path }}/{{ item.version }}/etc/php.ini"
  with_items: '{{php_releases}}'

- name: Symlink versions
  file: >
    src={{ phpenv_versions_path }}/{{ item.version }}
    dest={{ phpenv_versions_path }}/{{ item.minor }}
    state=link
  when: item.minor|default(false)
  with_items: '{{php_releases}}'

- name: tune mysql
  template: src=mysql-tune.cnf.j2 dest=/etc/mysql/conf.d/mysql-tune.cnf
  notify: restart mysql

- name: install phpunit 4.8.24
  get_url: url=https://phar.phpunit.de/phpunit-4.8.24.phar dest=/usr/local/bin/phpunit mode=555

- name: install composer
  get_url: url=https://getcomposer.org/download/1.1.0-RC/composer.phar  dest=/usr/local/bin/composer checksum=sha256:31e771ed24f3db45019a073fe9e43a6a8e75249962012955cd105ebec0a08100  mode=555

- name: setup mysql users for unit testing
  mysql_db: name={{ item }}
  with_items: '{{database_names}}'

- name: setup mysql dbs for unit testing
  mysql_user: name={{ item }} password=owncloud priv={{ item }}.*:ALL,GRANT
  with_items: '{{database_names}}'

- name: setup postgres dbs for unit testing
  postgresql_db: name={{ item }}
  with_items: '{{database_names}}'
  become: true
  become_user: postgres

- name: setup postgres user for unit testing
  postgresql_user: db={{ item }} name={{ item }} password=owncloud role_attr_flags=SUPERUSER
  with_items: '{{database_names}}'
  become: true
  become_user: postgres

- name: allow local usage of dropdb
  copy: src=pg_hba.conf dest=/etc/postgresql/9.4/main/pg_hba.conf
  notify: restart postgres

